name: Build and deploy application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_TAG: pingpong:latest
  # TODO: this is very ugly, but the array needs to be with object key-value pairs. It also needs to be escaped to pass into matrix context
  TARGET_NODES: '[{\"target\":\"64.226.110.192\"},{\"target\":\"64.226.110.193\"},{\"target\":\"64.226.84.47\"}]'

  # path to private key on entrypoint server, that is accepted by target nodes
  ENTRY_KEY_PATH: /root/.ssh/entry_key

jobs:
  build_and_push_to_registry:
    name: Build
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log into container registry
      uses: docker/login-action@v2
      with:
        # registry: ${{ secrets.REGISTRY_URL }} ## uncomment when using a private registry
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.REGISTRY_USERNAME}}/${{ env.IMAGE_TAG }}

    - name: Push image to registry
      run: docker image push ${{ secrets.REGISTRY_USERNAME }}/${{ env.IMAGE_TAG }}

  prepare_entry_server:
    name: Prepare entrypoint
    needs: build_and_push_to_registry
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set up SSH known hosts 
      run: ssh-keyscan -H ${{ secrets.ENTRY_HOST }} > ~/.ssh/known_hosts

    - name: Copy deployment script to entry-server
      run: scp deploy/deploy.sh root@${{ secrets.ENTRY_HOST }}:/root/deploy.sh 
  
  prepare_node_list:
    name: Prepare Nodes
    needs: prepare_entry_server
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "matrix={\"include\":${{ env.TARGET_NODES }}}" >> $GITHUB_OUTPUT

  run_deployments:
    name: Deploy node
    needs: prepare_node_list
    runs-on: ubuntu-latest
    strategy:
      # Since the ssh-agent shares its ID, it can get "cleaned up" before other jobs are completed if running in parallel.
      # this is why we only run 1 node at a time AND re-setup the ssh-agent for every node. 
      # This is a limitation of matrix strategy + webfactory/ssh-agent.
      # https://github.com/marketplace/actions/webfactory-ssh-agent#works-for-the-current-job-only
      max-parallel: 1
      matrix: ${{fromJson(needs.prepare_node_list.outputs.matrix)}}

    steps:
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add SSH entry-server to known hosts
      run: ssh-keyscan -H ${{ secrets.ENTRY_HOST }} > ~/.ssh/known_hosts

    - name: Add SSH target node entry-server's to known hosts
      run: ssh -t root@${{secrets.ENTRY_HOST}} "ssh-keyscan -H ${{ matrix.target }} > ~/.ssh/known_hosts"

    - name:  Copy deployment script to target node
      run: ssh -t root@${{secrets.ENTRY_HOST}} "scp -i ${{ env.ENTRY_KEY_PATH }} /root/deploy.sh root@${{ matrix.target }}:/root/deploy.sh"

    # - name:  Log into docker registry (private registry)
    #   run: ssh -t root@${{secrets.ENTRY_HOST}} 'ssh -i ${{ env.ENTRY_KEY_PATH }} root@${{ matrix.target }} "echo ${{ secrets.REGISTRY_PASSWORD }} | docker login -u ${{ secrets.REGISTRY_USERNAME }} ${{ secrets.REGISTRY_URL }} --password-stdin"'

    - name:  Log into docker registry (only when using docker hub)
      run: ssh -t root@${{secrets.ENTRY_HOST}} 'ssh -i ${{ env.ENTRY_KEY_PATH }} root@${{ matrix.target }} "echo ${{ secrets.REGISTRY_PASSWORD }} | docker login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin"'

    - name:  Run deployment script on target node
      run: ssh -t root@${{secrets.ENTRY_HOST}} "ssh -i ${{ env.ENTRY_KEY_PATH }} root@${{ matrix.target }} /root/deploy.sh"
